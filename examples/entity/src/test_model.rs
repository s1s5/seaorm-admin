//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "String(StringLen::None)")]
pub enum Category {
    #[sea_orm(string_value = "B")]
    Big,
    #[sea_orm(string_value = "S")]
    Small,
}

#[derive(Clone, Debug, PartialEq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "i32", db_type = "Integer")]
pub enum Color {
    #[sea_orm(num_value = 0)]
    Black,
    #[sea_orm(num_value = 1)]
    White,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "test_model")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Char(Some(32))", nullable)]
    pub char_f: Option<String>,
    pub string_f: Option<String>,
    pub text_f: Option<String>,
    pub tiny_integer_f: Option<i16>,
    pub small_integer_f: Option<i16>,
    pub integer_f: Option<i32>,
    pub big_integer_f: Option<i64>,
    pub tiny_unsigned_f: Option<i16>,
    pub small_unsigned_f: Option<i16>,
    pub unsigned_f: Option<i32>,
    pub big_unsigned_f: Option<i64>,
    #[sea_orm(column_type = "Float", nullable)]
    pub float_f: Option<f32>,
    #[sea_orm(column_type = "Double", nullable)]
    pub double_f: Option<f64>,
    #[sea_orm(column_type = "Decimal(Some((32, 2)))", nullable)]
    pub decimal_f: Option<Decimal>,
    pub date_time_f: Option<DateTime>,
    pub timestamp_f: Option<DateTime>,
    pub timestamp_with_time_zone_f: Option<DateTimeWithTimeZone>,
    pub time_f: Option<Time>,
    pub date_f: Option<Date>,
    #[sea_orm(column_type = "Binary(256)", nullable)]
    pub binary_f: Option<Vec<u8>>,
    #[sea_orm(column_type = "custom(\"bit varying\")", nullable)]
    pub var_binary_f: Option<String>,
    #[sea_orm(column_type = "custom(\"bit varying\")", nullable)]
    pub bit_f: Option<String>,
    #[sea_orm(column_type = "custom(\"bit(1)\")", nullable)]
    pub var_bit_f: Option<String>,
    pub boolean_f: Option<bool>,
    pub json_f: Option<Json>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub json_binary_f: Option<Json>,
    pub uuid_f: Option<Uuid>,
    #[sea_orm(column_type = "custom(\"cidr\")", nullable)]
    pub cidr_f: Option<String>,
    #[sea_orm(column_type = "custom(\"inet\")", nullable)]
    pub inet_f: Option<String>,
    #[sea_orm(column_type = "custom(\"macaddr\")", nullable)]
    pub mac_addr_f: Option<String>,
    pub enum_string: Option<Category>,
    pub enum_i32: Option<Color>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
